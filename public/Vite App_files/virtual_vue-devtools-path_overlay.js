import { functions, setDevToolsClientUrl } from "/Vw1n-SZTUFA-Web/node_modules/@vue/devtools-core/dist/index.js?v=1b7d4445"
import { addCustomTab, createRpcServer, devtools, setDevToolsEnv, setOpenInEditorBaseUrl, toggleComponentInspectorEnabled } from "/Vw1n-SZTUFA-Web/node_modules/vite-plugin-vue-devtools/node_modules/@vue/devtools-kit/dist/index.js?v=1b7d4445"
import vueDevToolsOptions from "/Vw1n-SZTUFA-Web/@id/__x00__virtual:vue-devtools-options"

function normalizeUrl(url) {
  return new URL(`${vueDevToolsOptions.base || '/'}${url}`, import.meta.url).toString()
}

const overlayDir = normalizeUrl(`@id/virtual:vue-devtools-path:overlay`)
const body = document.getElementsByTagName('body')[0]
const head = document.getElementsByTagName('head')[0]

setDevToolsEnv({
  vitePluginDetected: true,
})

const devtoolsClientUrl = normalizeUrl(`__devtools__/`)
setDevToolsClientUrl(devtoolsClientUrl)
setOpenInEditorBaseUrl(normalizeUrl('').slice(0, -1))

toggleComponentInspectorEnabled(!!vueDevToolsOptions.componentInspector)

devtools.init()

// create vite inspect tab
addCustomTab({
  title: 'Vite Inspect',
  name: 'vite-inspect',
  icon: 'i-carbon-ibm-watson-discovery',
  view: {
    type: 'iframe',
    src: normalizeUrl(`__inspect/`),
  },
  category: 'advanced',
})

// create link stylesheet
const link = document.createElement('link')
link.rel = 'stylesheet'
link.href = `${overlayDir}/devtools-overlay.css`

// create script
const script = document.createElement('script')
script.src = `${overlayDir}/devtools-overlay.mjs`
script.type = 'module'

// append to head
head.appendChild(link)

// append to body
body.appendChild(script)

// Used in the browser extension
window.__VUE_DEVTOOLS_VITE_PLUGIN_CLIENT_URL__ = `${window.location.origin}${devtoolsClientUrl}`

createRpcServer(functions, {
  preset: 'iframe',
})

createRpcServer(functions, {
  preset: 'broadcast',
})

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpcnR1YWw6dnVlLWRldnRvb2xzLXBhdGg6b3ZlcmxheS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmdW5jdGlvbnMsIHNldERldlRvb2xzQ2xpZW50VXJsIH0gZnJvbSBcIi9WdzFuLVNaVFVGQS1XZWIvbm9kZV9tb2R1bGVzL0B2dWUvZGV2dG9vbHMtY29yZS9kaXN0L2luZGV4LmpzP3Y9MWI3ZDQ0NDVcIlxuaW1wb3J0IHsgYWRkQ3VzdG9tVGFiLCBjcmVhdGVScGNTZXJ2ZXIsIGRldnRvb2xzLCBzZXREZXZUb29sc0Vudiwgc2V0T3BlbkluRWRpdG9yQmFzZVVybCwgdG9nZ2xlQ29tcG9uZW50SW5zcGVjdG9yRW5hYmxlZCB9IGZyb20gXCIvVncxbi1TWlRVRkEtV2ViL25vZGVfbW9kdWxlcy92aXRlLXBsdWdpbi12dWUtZGV2dG9vbHMvbm9kZV9tb2R1bGVzL0B2dWUvZGV2dG9vbHMta2l0L2Rpc3QvaW5kZXguanM/dj0xYjdkNDQ0NVwiXG5pbXBvcnQgdnVlRGV2VG9vbHNPcHRpb25zIGZyb20gXCIvVncxbi1TWlRVRkEtV2ViL0BpZC9fX3gwMF9fdmlydHVhbDp2dWUtZGV2dG9vbHMtb3B0aW9uc1wiXG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZVVybCh1cmwpIHtcbiAgcmV0dXJuIG5ldyBVUkwoYCR7dnVlRGV2VG9vbHNPcHRpb25zLmJhc2UgfHwgJy8nfSR7dXJsfWAsIGltcG9ydC5tZXRhLnVybCkudG9TdHJpbmcoKVxufVxuXG5jb25zdCBvdmVybGF5RGlyID0gbm9ybWFsaXplVXJsKGBAaWQvdmlydHVhbDp2dWUtZGV2dG9vbHMtcGF0aDpvdmVybGF5YClcbmNvbnN0IGJvZHkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdXG5jb25zdCBoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXVxuXG5zZXREZXZUb29sc0Vudih7XG4gIHZpdGVQbHVnaW5EZXRlY3RlZDogdHJ1ZSxcbn0pXG5cbmNvbnN0IGRldnRvb2xzQ2xpZW50VXJsID0gbm9ybWFsaXplVXJsKGBfX2RldnRvb2xzX18vYClcbnNldERldlRvb2xzQ2xpZW50VXJsKGRldnRvb2xzQ2xpZW50VXJsKVxuc2V0T3BlbkluRWRpdG9yQmFzZVVybChub3JtYWxpemVVcmwoJycpLnNsaWNlKDAsIC0xKSlcblxudG9nZ2xlQ29tcG9uZW50SW5zcGVjdG9yRW5hYmxlZCghIXZ1ZURldlRvb2xzT3B0aW9ucy5jb21wb25lbnRJbnNwZWN0b3IpXG5cbmRldnRvb2xzLmluaXQoKVxuXG4vLyBjcmVhdGUgdml0ZSBpbnNwZWN0IHRhYlxuYWRkQ3VzdG9tVGFiKHtcbiAgdGl0bGU6ICdWaXRlIEluc3BlY3QnLFxuICBuYW1lOiAndml0ZS1pbnNwZWN0JyxcbiAgaWNvbjogJ2ktY2FyYm9uLWlibS13YXRzb24tZGlzY292ZXJ5JyxcbiAgdmlldzoge1xuICAgIHR5cGU6ICdpZnJhbWUnLFxuICAgIHNyYzogbm9ybWFsaXplVXJsKGBfX2luc3BlY3QvYCksXG4gIH0sXG4gIGNhdGVnb3J5OiAnYWR2YW5jZWQnLFxufSlcblxuLy8gY3JlYXRlIGxpbmsgc3R5bGVzaGVldFxuY29uc3QgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpbmsnKVxubGluay5yZWwgPSAnc3R5bGVzaGVldCdcbmxpbmsuaHJlZiA9IGAke292ZXJsYXlEaXJ9L2RldnRvb2xzLW92ZXJsYXkuY3NzYFxuXG4vLyBjcmVhdGUgc2NyaXB0XG5jb25zdCBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKVxuc2NyaXB0LnNyYyA9IGAke292ZXJsYXlEaXJ9L2RldnRvb2xzLW92ZXJsYXkubWpzYFxuc2NyaXB0LnR5cGUgPSAnbW9kdWxlJ1xuXG4vLyBhcHBlbmQgdG8gaGVhZFxuaGVhZC5hcHBlbmRDaGlsZChsaW5rKVxuXG4vLyBhcHBlbmQgdG8gYm9keVxuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpXG5cbi8vIFVzZWQgaW4gdGhlIGJyb3dzZXIgZXh0ZW5zaW9uXG53aW5kb3cuX19WVUVfREVWVE9PTFNfVklURV9QTFVHSU5fQ0xJRU5UX1VSTF9fID0gYCR7d2luZG93LmxvY2F0aW9uLm9yaWdpbn0ke2RldnRvb2xzQ2xpZW50VXJsfWBcblxuY3JlYXRlUnBjU2VydmVyKGZ1bmN0aW9ucywge1xuICBwcmVzZXQ6ICdpZnJhbWUnLFxufSlcblxuY3JlYXRlUnBjU2VydmVyKGZ1bmN0aW9ucywge1xuICBwcmVzZXQ6ICdicm9hZGNhc3QnLFxufSlcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRO0FBQzFILE1BQU0sQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsc0JBQXNCLENBQUMsQ0FBQywrQkFBK0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRO0FBQ2hQLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsUUFB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